import pytest
from unittest.mock import patch, MagicMock
from plugins.vulnerability_scanner import VulnerabilityScannerPlugin
from lib.core import ScanTarget, PortResult

@patch('requests.get')
def test_vulnerability_scanner_cve_check(mock_get):
    """
    Tests that the vulnerability scanner correctly identifies a CVE based on brand.
    """
    # Arrange
    plugin = VulnerabilityScannerPlugin()
    target = ScanTarget(
        ip='192.168.1.100',
        brand='Hikvision',
        open_ports=[PortResult(port=80, is_open=True)]
    )

    # Mock requests.get to avoid actual network calls for the other vuln tests
    mock_get.return_value.status_code = 404

    # Act
    findings = plugin.scan(target)

    # Assert
    cve_findings = [f for f in findings if f.data.get('vulnerability_type') == 'cve']
    assert len(cve_findings) > 0

    cve_list = [f.data.get('cve') for f in cve_findings]
    assert 'CVE-2017-7921' in cve_list
